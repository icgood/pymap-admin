"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ResultCode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V = typing.Union[ValueType]
class _ResultCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResultCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SUCCESS: ResultCode.ValueType = ...  # 0
    FAILURE: ResultCode.ValueType = ...  # 1
class ResultCode(_ResultCode, metaclass=_ResultCodeEnumTypeWrapper):
    pass

SUCCESS: ResultCode.ValueType = ...  # 0
FAILURE: ResultCode.ValueType = ...  # 1
global___ResultCode = ResultCode


class Result(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    code: global___ResultCode.ValueType = ...
    response: builtins.bytes = ...
    key: typing.Text = ...
    def __init__(self,
        *,
        code : global___ResultCode.ValueType = ...,
        response : builtins.bytes = ...,
        key : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","key",b"key","response",b"response"]) -> None: ...
global___Result = Result

class LoginRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTHCID_FIELD_NUMBER: builtins.int
    SECRET_FIELD_NUMBER: builtins.int
    AUTHZID_FIELD_NUMBER: builtins.int
    TOKEN_EXPIRATION_FIELD_NUMBER: builtins.int
    authcid: typing.Text = ...
    secret: typing.Text = ...
    authzid: typing.Text = ...
    token_expiration: builtins.float = ...
    def __init__(self,
        *,
        authcid : typing.Text = ...,
        secret : typing.Text = ...,
        authzid : typing.Optional[typing.Text] = ...,
        token_expiration : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_authzid",b"_authzid","_token_expiration",b"_token_expiration","authzid",b"authzid","token_expiration",b"token_expiration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_authzid",b"_authzid","_token_expiration",b"_token_expiration","authcid",b"authcid","authzid",b"authzid","secret",b"secret","token_expiration",b"token_expiration"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_authzid",b"_authzid"]) -> typing.Optional[typing_extensions.Literal["authzid"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_token_expiration",b"_token_expiration"]) -> typing.Optional[typing_extensions.Literal["token_expiration"]]: ...
global___LoginRequest = LoginRequest

class LoginResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    BEARER_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___Result: ...
    bearer_token: typing.Text = ...
    def __init__(self,
        *,
        result : typing.Optional[global___Result] = ...,
        bearer_token : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_bearer_token",b"_bearer_token","bearer_token",b"bearer_token","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_bearer_token",b"_bearer_token","bearer_token",b"bearer_token","result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bearer_token",b"_bearer_token"]) -> typing.Optional[typing_extensions.Literal["bearer_token"]]: ...
global___LoginResponse = LoginResponse

class PingRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___PingRequest = PingRequest

class PingResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    PYMAP_VERSION_FIELD_NUMBER: builtins.int
    PYMAP_ADMIN_VERSION_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___Result: ...
    pymap_version: typing.Text = ...
    pymap_admin_version: typing.Text = ...
    def __init__(self,
        *,
        result : typing.Optional[global___Result] = ...,
        pymap_version : typing.Text = ...,
        pymap_admin_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pymap_admin_version",b"pymap_admin_version","pymap_version",b"pymap_version","result",b"result"]) -> None: ...
global___PingResponse = PingResponse

class AppendRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_FIELD_NUMBER: builtins.int
    SENDER_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    MAILBOX_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    FLAGS_FIELD_NUMBER: builtins.int
    WHEN_FIELD_NUMBER: builtins.int
    user: typing.Text = ...
    sender: typing.Text = ...
    recipient: typing.Text = ...
    mailbox: typing.Text = ...
    data: builtins.bytes = ...
    @property
    def flags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    when: builtins.int = ...
    def __init__(self,
        *,
        user : typing.Text = ...,
        sender : typing.Optional[typing.Text] = ...,
        recipient : typing.Optional[typing.Text] = ...,
        mailbox : typing.Optional[typing.Text] = ...,
        data : builtins.bytes = ...,
        flags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        when : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_mailbox",b"_mailbox","_recipient",b"_recipient","_sender",b"_sender","mailbox",b"mailbox","recipient",b"recipient","sender",b"sender"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_mailbox",b"_mailbox","_recipient",b"_recipient","_sender",b"_sender","data",b"data","flags",b"flags","mailbox",b"mailbox","recipient",b"recipient","sender",b"sender","user",b"user","when",b"when"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mailbox",b"_mailbox"]) -> typing.Optional[typing_extensions.Literal["mailbox"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_recipient",b"_recipient"]) -> typing.Optional[typing_extensions.Literal["recipient"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sender",b"_sender"]) -> typing.Optional[typing_extensions.Literal["sender"]]: ...
global___AppendRequest = AppendRequest

class AppendResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    MAILBOX_FIELD_NUMBER: builtins.int
    VALIDITY_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___Result: ...
    mailbox: typing.Text = ...
    validity: builtins.int = ...
    uid: builtins.int = ...
    def __init__(self,
        *,
        result : typing.Optional[global___Result] = ...,
        mailbox : typing.Text = ...,
        validity : typing.Optional[builtins.int] = ...,
        uid : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_uid",b"_uid","_validity",b"_validity","result",b"result","uid",b"uid","validity",b"validity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_uid",b"_uid","_validity",b"_validity","mailbox",b"mailbox","result",b"result","uid",b"uid","validity",b"validity"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_uid",b"_uid"]) -> typing.Optional[typing_extensions.Literal["uid"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_validity",b"_validity"]) -> typing.Optional[typing_extensions.Literal["validity"]]: ...
global___AppendResponse = AppendResponse

class UserData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PASSWORD_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    password: typing.Text = ...
    @property
    def params(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        password : typing.Optional[typing.Text] = ...,
        params : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_password",b"_password","password",b"password"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_password",b"_password","params",b"params","password",b"password"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_password",b"_password"]) -> typing.Optional[typing_extensions.Literal["password"]]: ...
global___UserData = UserData

class GetUserRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_FIELD_NUMBER: builtins.int
    user: typing.Text = ...
    def __init__(self,
        *,
        user : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user",b"user"]) -> None: ...
global___GetUserRequest = GetUserRequest

class SetUserRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    user: typing.Text = ...
    @property
    def data(self) -> global___UserData: ...
    def __init__(self,
        *,
        user : typing.Text = ...,
        data : typing.Optional[global___UserData] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data",b"data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data","user",b"user"]) -> None: ...
global___SetUserRequest = SetUserRequest

class DeleteUserRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_FIELD_NUMBER: builtins.int
    user: typing.Text = ...
    def __init__(self,
        *,
        user : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user",b"user"]) -> None: ...
global___DeleteUserRequest = DeleteUserRequest

class UserResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___Result: ...
    username: typing.Text = ...
    @property
    def data(self) -> global___UserData: ...
    def __init__(self,
        *,
        result : typing.Optional[global___Result] = ...,
        username : typing.Optional[typing.Text] = ...,
        data : typing.Optional[global___UserData] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_username",b"_username","data",b"data","result",b"result","username",b"username"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_username",b"_username","data",b"data","result",b"result","username",b"username"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_username",b"_username"]) -> typing.Optional[typing_extensions.Literal["username"]]: ...
global___UserResponse = UserResponse
